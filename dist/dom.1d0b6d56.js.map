{"version":3,"sources":["dom.js"],"names":["window","cathy","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","k","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","siblings","Array","from","children","filter","item","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"../src","sourcesContent":["window.cathy={\n    create(string){\n        const container = document.createElement(\"template\");\n        //用template来做一个容器来容纳各种标签\n        container.innerHTML = string.trim();//去除开头空格\n        return container.content.firstChild;\n        //返回容器的内容的第一个孩子\n    },\n    after(node,node2){//把node2插入到node的后面\n        node.parentNode.insertBefore(node2,node.nextSibling)//node2插入到node的下一个兄弟的前面\n    },\n    before(node,node2){//把node2插入到node的前面\n        node.parentNode.insertBefore(node2,node)//x插入到y的前面\n    },\n    append(parent,node){\n        parent.appendChild(node)\n    },\n    wrap(node,parent){\n        cathy.before(node,parent)//爸爸先作为哥哥来到儿子前面,是我写的，所以要加cathy\n        cathy.append(parent,node)//然后爸爸再把弟弟收为儿子😂,是我写的，所以要加cathy\n    },\n    //=================以上为增====================\n    remove(node){\n        node.parentNode.removeChild(node)//删除爸爸节点中的这个孩子节点\n        return node//返回的话外面就还可以保留对这个节点的引用\n    },\n    empty(node){\n        const array = []\n        let x =node.firstChild\n        while(x){//只要还有孩子，就继续\n            array.push(cathy.remove(x))//用刚刚写的remove删除第一个孩子，push进array里备份\n            x = node.firstChild//之前的第二个孩子晋级成了第一个孩子，把它赋给x，继续搞它\n        }\n        return array\n    },\n    //=================以上为删====================\n    attr(node,name,value){\n        if(arguments.length === 3){//看来这人想要改写\n            node.setAttribute(name,value)\n        }else if(arguments.length === 2){//看来这人只是想要读取\n            // else if用来写设想的第二种情况！！！\n            return node.getAttribute(name)// 因为是读取，返回值就好\n        }\n    },\n    text(node,string){\n        if(arguments.length === 2){\n            if('innerText' in node){//IE\n                node.innerText = string\n            }else{// 考虑不同浏览器的说法不同，这叫适配！\n                node.textContent = string //firefox/chrome\n            }\n        }else if(arguments.length === 1){\n            return node.innerText || node.textContent\n        }\n    },\n    html(node,string){\n        if(arguments.length ===2){\n            node.innerHTML = string\n        }else if(arguments.length ===1){\n            return node.innerHTML\n        }\n    },\n    style(node,name,value){\n        if(arguments.length===3){ // 可以想象dom.style(div, 'color', 'red')以判断用户想要改颜色\n            node.style[name] = value\n        }else if(arguments.length ===2){\n            if(typeof name ==='string'){// 可以想象dom.style(div, 'color')，判断用户想要读取color的内容\n            return node.style[name]\n            }else if(name instanceof Object){//如果name是Object的格式展现出来， dom.style(div, {color: 'red'})，也可以知道用户想要改颜色\n                const object = name\n                for(let k in object){//相当于把'color'之类的key赋值给了k k= 'color' 然后搜寻此object里的key\n                    // console.log(k)\n                    // console.log(object[k])\n                    node.style[k] =object[k]//style[key]要用[]扩起来!!如果直接用style.k === style[`k`] 然后用object[k]取到value\n                }\n            }\n        }\n},\n    class:{\n        add(node, className){\n            node.classList.add(className)\n        },\n        remove(node, className){\n            node.classList.remove(className)\n\n        },\n        has(node, className){\n            return node.classList.contains(className)\n\n        }\n    },\n    on(node, eventName, fn){\n        node.addEventListener(eventName, fn)\n    },\n    off(node,eventName,fn){\n        node.removeEventListener(eventName,fn)\n    },\n    find(selector, scope){\n        return (scope||document).querySelectorAll(selector)//这也是重载的思想！or的短路逻辑是前者如果为假，还会看后者，所以我们可以把设想的备用情况放在前面～有则执行，无也无妨。\n    },\n    siblings(node){\n        return Array.from(node.parentNode.children).filter(item => item!==node)\n    },//children本身是一个伪数组！需要转化成数组!然后要注意filter的用法\n    parent(node){\n        return node.parentNode\n    },\n    children(node){\n        return node.children\n    },\n    next(node){\n        let x = node.nextSibling\n        while (x && x.nodeType === 3){\n            x = x.nextSibling\n        }\n        return  x\n    },\n    previous(node){\n        let x = node.previousSibling\n        while(x && x.nodeType ===3){\n            x = x.previousSibling\n        }\n        return x\n    },\n    each(nodeList,fn){//必须得是nodelist，才可以获得长度，进行遍历\n       for(let i=0;i<nodeList.length;i++){\n           fn.call(null,nodeList[i])\n       }\n    },\n    index(node){\n        const list = cathy.children(node.parentNode) //伪数组\n        let i\n        for(i =0;i<list.length; i++){//但伪数组是有length和index的！！\n                if(node === list[i]){\n                    break\n                }\n        }\n        return i+1//我觉得加1更加直观～\n    }\n\n}"]}